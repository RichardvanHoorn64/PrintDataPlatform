# Generated by Django 5.0.6 on 2024-09-03 10:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('language_id', models.AutoField(primary_key=True, serialize=False)),
                ('language_code', models.CharField(blank=True, max_length=10, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MemberPlans',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_plan_id', models.PositiveIntegerField(null=True)),
                ('producer', models.BooleanField(default=False)),
                ('plan_name', models.CharField(max_length=100)),
                ('plan_tariff', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('feature1', models.CharField(blank=True, max_length=100, null=True)),
                ('feature2', models.CharField(blank=True, max_length=100, null=True)),
                ('feature3', models.CharField(blank=True, max_length=100, null=True)),
                ('feature4', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('language', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.languages')),
            ],
            options={
                'verbose_name': 'Member_plan',
                'verbose_name_plural': 'Member_plans',
            },
        ),
        migrations.CreateModel(
            name='Producers',
            fields=[
                ('producer_id', models.AutoField(primary_key=True, serialize=False)),
                ('manager', models.CharField(blank=True, max_length=50, null=True)),
                ('user_admin', models.PositiveIntegerField(blank=True, null=True)),
                ('company', models.CharField(max_length=250)),
                ('tel_general', models.CharField(blank=True, max_length=15)),
                ('mobile_number', models.CharField(blank=True, max_length=15)),
                ('e_mail_general', models.EmailField(blank=True, max_length=254)),
                ('street_number', models.CharField(blank=True, max_length=300)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(blank=True, max_length=250)),
                ('country_code', models.CharField(default='NL', max_length=100)),
                ('demo_company', models.BooleanField(default=False)),
                ('company_url', models.URLField(blank=True, null=True)),
                ('exclusive_module', models.BooleanField(default=False)),
                ('calculation_module', models.BooleanField(default=False)),
                ('brandportal_module', models.BooleanField(default=False)),
                ('powerplatform_module', models.BooleanField(default=False)),
                ('api_module', models.BooleanField(default=False)),
                ('api_active', models.BooleanField(default=False)),
                ('api_function', models.CharField(blank=True, max_length=200, null=True)),
                ('api_url', models.CharField(blank=True, max_length=300, null=True)),
                ('response_score', models.PositiveIntegerField(default=1, null=True)),
                ('automated_score', models.PositiveIntegerField(default=1, null=True)),
                ('win_score', models.PositiveIntegerField(default=1, null=True)),
                ('doc_templates', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('demo', models.BooleanField(default=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=500)),
                ('language', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.languages')),
                ('member_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.memberplans')),
            ],
            options={
                'verbose_name': 'producer',
                'verbose_name_plural': 'producers',
            },
        ),
        migrations.CreateModel(
            name='Members',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('producerplan', models.BooleanField(default=False)),
                ('manager', models.CharField(default='', max_length=50)),
                ('user_admin', models.PositiveIntegerField(blank=True, null=True)),
                ('company', models.CharField(max_length=250)),
                ('tel_general', models.CharField(blank=True, max_length=15)),
                ('mobile_number', models.CharField(blank=True, max_length=15)),
                ('e_mail_general', models.EmailField(blank=True, max_length=254)),
                ('street_number', models.CharField(blank=True, max_length=300)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(blank=True, max_length=250)),
                ('country_code', models.CharField(default='NL', max_length=100)),
                ('demo_company', models.BooleanField(default=False)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('company_url', models.URLField(blank=True, null=True)),
                ('doc_templates', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('language', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.languages')),
                ('member_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.memberplans')),
                ('exclusive_producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.producers')),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('jobtitle', models.CharField(blank=True, max_length=100)),
                ('company', models.CharField(max_length=250)),
                ('tel_general', models.CharField(blank=True, max_length=15)),
                ('mobile_number', models.CharField(blank=True, max_length=15)),
                ('e_mail_general', models.EmailField(blank=True, max_length=254)),
                ('street_number', models.CharField(blank=True, max_length=300)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(blank=True, max_length=250)),
                ('country_code', models.CharField(default='NL', max_length=100)),
                ('first_user', models.BooleanField(default=True)),
                ('conditions_approved', models.BooleanField(default=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('company_url', models.URLField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('language', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.languages')),
                ('member_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.memberplans')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.members')),
                ('producer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profileuseraccount.producers')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
