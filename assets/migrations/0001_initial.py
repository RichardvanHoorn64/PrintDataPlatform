# Generated by Django 5.0.6 on 2024-05-09 21:15

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bindingmachines',
            fields=[
                ('bindingmachine_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_name', models.CharField(max_length=200)),
                ('tariff_eur_hour', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('added_value', models.BooleanField(default=True)),
                ('cover_feeder', models.BooleanField(default=False)),
                ('max_number_stations_default', models.PositiveIntegerField(default=0, null=True)),
                ('max_number_stations_max', models.PositiveIntegerField(default=0, null=True)),
                ('max_speed_hour', models.PositiveIntegerField(default=0, null=True)),
                ('speedreduction_extra_station', models.PositiveIntegerField(default=0, null=True)),
                ('max_width_untrimmed_mm', models.PositiveIntegerField(default=0, null=True)),
                ('max_height_untrimmed_mm', models.PositiveIntegerField(default=0, null=True)),
                ('min_width_untrimmed_mm', models.PositiveIntegerField(default=0, null=True)),
                ('min_height_untrimmed_mm', models.PositiveIntegerField(default=0, null=True)),
                ('setup_order_min', models.PositiveIntegerField(default=0, null=True)),
                ('setup_time_cover_min', models.PositiveIntegerField(default=0, null=True)),
                ('setup_time_station_min', models.PositiveIntegerField(default=0, null=True)),
                ('paperwaste_perc', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('speedreduction_landscape', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('speedreduction_square', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('setup_landscape', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('setup_square', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
            ],
            options={
                'verbose_name': 'Bindingmachine',
                'verbose_name_plural': 'Bindingmachines',
            },
        ),
        migrations.CreateModel(
            name='Cuttingmachines',
            fields=[
                ('cuttingmachine_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_name', models.CharField(max_length=200)),
                ('tariff_eur_hour', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('max_width_mm', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(2000)])),
                ('max_depth_mm', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(2000)])),
                ('max_stackheight_mm', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('setup_order_min', models.PositiveIntegerField(default=0)),
                ('time_cutting_sec', models.PositiveIntegerField(default=0)),
                ('time_per_extra_sec', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Cuttingmachines',
                'verbose_name_plural': 'Cuttingmachine',
            },
        ),
        migrations.CreateModel(
            name='Foldingmachines',
            fields=[
                ('foldingmachine_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_name', models.CharField(max_length=200)),
                ('tariff_eur_hour', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('added_value', models.BooleanField(default=True)),
                ('vertical_offered', models.BooleanField(default=True)),
                ('landscape_offered', models.BooleanField(default=True)),
                ('square_offered', models.BooleanField(default=True)),
                ('max_paperheight_mm', models.PositiveIntegerField(default=0, null=True)),
                ('max_paperwidth_mm', models.PositiveIntegerField(default=0, null=True)),
                ('setup_time_min', models.PositiveIntegerField(default=0, null=True)),
                ('speedreduction_heavy_paper_perc', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('weight_heavy_paper', models.PositiveIntegerField(default=170, null=True)),
                ('speedreduction_light_paper_perc', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('weight_light_paper', models.PositiveIntegerField(default=80, null=True)),
                ('paperwaste_1000sheet_perc', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('paperwaste_start', models.PositiveIntegerField(default=0, null=True)),
                ('setup_time_per_station_min', models.PositiveIntegerField(default=0, null=True)),
                ('max_number_stations', models.PositiveIntegerField(default=0, null=True)),
                ('sheet_per_hour', models.PositiveIntegerField(default=0, null=True)),
                ('margin_katern_mm', models.PositiveIntegerField(default=0, null=True)),
                ('meter_per_hour', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('pages_per_katern', models.PositiveIntegerField(default=4, null=True)),
                ('sheet_input', models.CharField(default='sheet_height', max_length=50)),
                ('setup_time_1e_katern_min', models.PositiveIntegerField(default=0, null=True)),
                ('setup_time_next_katern_min', models.PositiveIntegerField(default=0, null=True)),
                ('min_weight_paper_katern', models.PositiveIntegerField(default=80)),
                ('max_weight_paper_katern', models.PositiveIntegerField(default=170)),
            ],
            options={
                'verbose_name': 'foldingmachines',
                'verbose_name_plural': 'foldingmachine',
            },
        ),
        migrations.CreateModel(
            name='FoldingTypes',
            fields=[
                ('foldingtype_id', models.AutoField(primary_key=True, serialize=False)),
                ('foldingtype', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Foldingtypes',
                'verbose_name_plural': 'Foldingtype',
            },
        ),
        migrations.CreateModel(
            name='GeneralCalculationSettings',
            fields=[
                ('setting_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_startcost', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('purchase_paper_perc_added', models.DecimalField(decimal_places=2, default=0, max_digits=6, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('overflow_offset_mm', models.PositiveIntegerField(default=2)),
                ('katernmargin', models.PositiveIntegerField(default=5)),
                ('headmargin', models.PositiveIntegerField(default=5)),
                ('pms_offering', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'general tariff',
                'verbose_name_plural': 'general-tariffs',
            },
        ),
        migrations.CreateModel(
            name='Printers',
            fields=[
                ('printer_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_name', models.CharField(max_length=200)),
                ('tariff_eur_hour', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('buy_tariff_plate_eur', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('margin_plate_eur', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('perfecting', models.BooleanField(default=False)),
                ('pms_offered', models.BooleanField(default=False)),
                ('varnish_unit', models.BooleanField(default=False)),
                ('varnish_at_printunit', models.BooleanField(default=False)),
                ('ink_1000_prints_zw', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('ink_1000_prints_fc', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('ink_1000_prints_varnish', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('ink_1000_prints_pms', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('ink_start_costs_pms', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('max_number_colors', models.PositiveIntegerField(null=True)),
                ('max_number_colors_front_sw', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('max_number_colors_back_sw', models.PositiveIntegerField(default=0, null=True)),
                ('printsize_height', models.PositiveIntegerField(default=0)),
                ('printsize_width', models.PositiveIntegerField(default=0)),
                ('sheetsize_height_min', models.PositiveIntegerField(default=0)),
                ('sheetsize_width_min', models.PositiveIntegerField(default=0)),
                ('extra_mm_sheet_sidemargin', models.PositiveIntegerField(default=0, null=True)),
                ('strips_extra_margin_mm', models.PositiveIntegerField(default=0, null=True)),
                ('central_extra_margin_mm', models.PositiveIntegerField(default=0, null=True)),
                ('extra_strip_option', models.PositiveIntegerField(default=0, null=True)),
                ('productionspeed_sheets_hour', models.PositiveIntegerField(default=0, null=True)),
                ('perc_speedreduction_heavy_paper', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('weight_heavy_paper', models.PositiveIntegerField(default=170, null=True)),
                ('perc_speedreduction_light_paper', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('weight_light_paper', models.PositiveIntegerField(default=80, null=True)),
                ('starttime_per_order', models.PositiveIntegerField(default=0, null=True)),
                ('start_time_sheet_frontside', models.PositiveIntegerField(default=0, null=True)),
                ('start_time_sheet_backside', models.PositiveIntegerField(default=0, null=True)),
                ('start_time_pms_color', models.PositiveIntegerField(default=0, null=True)),
                ('start_time_varnish', models.PositiveIntegerField(default=0, null=True)),
                ('perc_speedreduction_perfecting', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('changetime_perfector', models.PositiveIntegerField(default=0, null=True)),
                ('paperwaste_per_order', models.PositiveIntegerField(default=0, null=True)),
                ('paperwaste_per_side_black', models.PositiveIntegerField(default=0, null=True)),
                ('paperwaste_per_side_fc', models.PositiveIntegerField(default=0, null=True)),
                ('paperwaste_per_side_pms', models.PositiveIntegerField(default=0, null=True)),
                ('paperwaste_per_side_varnish', models.PositiveIntegerField(default=0, null=True)),
                ('perc_paperwaste_printing_1000_sheets', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('perc_extra_paperwaste_printing_pms', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('perc_paperwaste_printing_1000_sheet_perfector', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Printer',
                'verbose_name_plural': 'Printers',
            },
        ),
    ]
